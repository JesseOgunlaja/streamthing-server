name: Build and deploy

on:
  push:
    branches: ["main"]

env:
  IMAGE_NAME: ghcr.io/jesseogunlaja/streamthing

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PORT: 5000
      UPSTASH_REDIS_URL: ${{ secrets.UPSTASH_REDIS_URL }}
      UPSTASH_REDIS_TOKEN: ${{ secrets.UPSTASH_REDIS_TOKEN }}
      REGION: ${{ vars.TEST_SERVER_REGION }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version: '25'
          registry-url: 'https://registry.npmjs.org'

      - name: Get latest version
        id: version
        run: echo "version=$(npm view streamthing version)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm install && npm install streamthing@${{ steps.version.outputs.version}}

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1.2.0
        with:
          version: latest

      - name: Start docker compose
        run: docker-compose -f docker-compose.staging.yaml up -d

      - name: Run test
        run: npm run test
        env:
          STREAMTHING_CUSTOM_HOST: ws://localhost:5000
          SERVER_ID: ${{ secrets.TEST_SERVER_ID }}
          SERVER_PASSWORD: ${{ secrets.TEST_SERVER_PASSWORD }}
          SERVER_REGION: ${{ vars.TEST_SERVER_REGION }}

      - name: Stop docker compose
        if:  always()
        run: docker-compose down

      - name: Promote staged to latest
        if: success()
        run: |
          npm dist-tag add streamthing@${{ steps.version.outputs.version }} latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: eu-central
            host: ${{ vars.EU_CENTRAL_HOST }}
          - name: us-east
            host: ${{ vars.US_EAST_HOST }}
          - name: us-west
            host: ${{ vars.US_WEST_HOST }}

    steps:
      - uses: actions/checkout@v5

      - name: Copy docker-compose.yaml to ${{ matrix.name }}
        uses: appleboy/scp-action@v1
        with:
          host: ${{ matrix.host }}
          username: root
          password: ${{ secrets.SSH_PASSWORD }}
          source: "docker-compose.yaml"
          target: "/opt/streamthing"

      - name: Deploy to ${{ matrix.name }}
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ matrix.host }}
          username: root
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /opt/streamthing
            docker compose up -d --force-recreate --pull always server
